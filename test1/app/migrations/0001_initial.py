# Generated by Django 3.0.5 on 2020-05-13 13:18

import app.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='dummy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=0)),
                ('title', models.CharField(max_length=191, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='authors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=0)),
                ('access', models.IntegerField(default=1)),
                ('name', models.CharField(max_length=191, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='buy_clothe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=0)),
                ('position', models.IntegerField(null=True)),
                ('title', models.CharField(max_length=191, null=True)),
                ('image', models.CharField(max_length=191, null=True)),
                ('price', models.IntegerField(null=True)),
                ('present', models.BooleanField(default=0)),
                ('size', models.IntegerField(null=True)),
                ('brand', models.CharField(max_length=191, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='buy_food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=0)),
                ('position', models.IntegerField(null=True)),
                ('title', models.CharField(max_length=191, null=True)),
                ('image', models.CharField(max_length=191, null=True)),
                ('price', models.IntegerField(null=True)),
                ('present', models.BooleanField(default=0)),
                ('ingredients', models.CharField(max_length=191, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=0)),
                ('other_position', models.IntegerField(db_column='position', null=True)),
                ('title', models.CharField(max_length=191, null=True)),
                ('image', models.CharField(max_length=191, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('bind', models.BinaryField(editable=True, null=True)),
                ('text', models.TextField(null=True)),
                ('decimal', models.DecimalField(decimal_places=2, max_digits=2, null=True)),
                ('email', models.EmailField(blank=True, max_length=100)),
                ('file', models.FileField(max_length=254, null=True, upload_to=None)),
                ('float', models.FloatField(null=True)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('age', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'my_goods',
                'ordering': ['created'],
                'get_latest_by': 'created',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='news',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=0)),
                ('testChar_null', models.CharField(max_length=191, null=True)),
                ('testChar_blank', models.CharField(blank=True, max_length=191)),
                ('testChar_choices', models.CharField(choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large')], max_length=191, null=True)),
                ('test_help_text', models.CharField(help_text='<b>help_text</b> - нужен для документирование', max_length=100, null=True)),
                ('test_ix_unique', models.CharField(help_text='unique создает индекс unique', max_length=50, null=True, unique=True)),
                ('test_ix_index', models.CharField(db_index=True, help_text='db_index создает индекс index', max_length=50, null=True)),
                ('test_full_defaulname', models.CharField(max_length=30, null=True, verbose_name="person's first name")),
            ],
        ),
        migrations.CreateModel(
            name='news2authors',
            fields=[
                ('let_id', models.AutoField(primary_key=True, serialize=False)),
                ('news_id', models.IntegerField(db_index=True, null=True)),
                ('author_id', models.IntegerField(db_index=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('address', models.CharField(blank=True, max_length=80)),
                ('enable', models.BooleanField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=191, null=True)),
            ],
            options={
                'ordering': ['title'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='validate_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=0)),
                ('position', models.IntegerField(null=True)),
                ('title', models.CharField(max_length=191, null=True)),
                ('even_field', models.IntegerField(null=True, validators=[app.models.validate_even])),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Place')),
                ('serves_hot_dogs', models.BooleanField(default=False)),
                ('serves_pizza', models.BooleanField(default=False)),
            ],
            bases=('app.place',),
        ),
        migrations.AddIndex(
            model_name='goods',
            index=models.Index(fields=['title', 'email'], name='ixIndex'),
        ),
        migrations.AddIndex(
            model_name='goods',
            index=models.Index(fields=['ip'], name='ixTExt'),
        ),
        migrations.AlterUniqueTogether(
            name='goods',
            unique_together={('ip',)},
        ),
        migrations.CreateModel(
            name='othePlace',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('app.place',),
        ),
    ]
